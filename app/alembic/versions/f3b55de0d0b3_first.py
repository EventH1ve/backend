"""“First”

Revision ID: f3b55de0d0b3
Revises: 
Create Date: 2023-04-27 03:40:17.813412

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'f3b55de0d0b3'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('contactperson',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('phonenumber', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_contactperson_id'), 'contactperson', ['id'], unique=False)
    op.create_table('event',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('creationdate', sa.DateTime(), nullable=True),
    sa.Column('registrationstartdatetime', sa.DateTime(), nullable=True),
    sa.Column('registrationenddatetime', sa.DateTime(), nullable=True),
    sa.Column('eventstartdatetime', sa.DateTime(), nullable=True),
    sa.Column('eventenddatetime', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_event_id'), 'event', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('password', sa.String(), nullable=True),
    sa.Column('phonenumber', sa.String(), nullable=True),
    sa.Column('firstname', sa.String(), nullable=True),
    sa.Column('lastname', sa.String(), nullable=True),
    sa.Column('type', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('venue',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('capacity', sa.Integer(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('createdby', sa.String(), nullable=True),
    sa.Column('buildingnumber', sa.Integer(), nullable=True),
    sa.Column('streetname', sa.String(), nullable=True),
    sa.Column('city', sa.String(), nullable=True),
    sa.Column('country', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_venue_id'), 'venue', ['id'], unique=False)
    op.create_table('tickettype',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('eventid', sa.Integer(), nullable=True),
    sa.Column('price', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['eventid'], ['event.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tickettype_id'), 'tickettype', ['id'], unique=False)
    op.create_table('venuecontact',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('venueid', sa.Integer(), nullable=True),
    sa.Column('contactid', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['contactid'], ['contactperson.id'], ),
    sa.ForeignKeyConstraint(['venueid'], ['venue.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_venuecontact_id'), 'venuecontact', ['id'], unique=False)
    op.create_table('venuerestriction',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('venueid', sa.Integer(), nullable=True),
    sa.Column('restriction', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['venueid'], ['venue.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_venuerestriction_id'), 'venuerestriction', ['id'], unique=False)
    op.create_table('eventticketcapacity',
    sa.Column('eventid', sa.Integer(), nullable=False),
    sa.Column('tickettypeid', sa.Integer(), nullable=False),
    sa.Column('capacity', sa.Integer(), nullable=True),
    sa.Column('reserved', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['eventid'], ['event.id'], ),
    sa.ForeignKeyConstraint(['tickettypeid'], ['tickettype.id'], ),
    sa.PrimaryKeyConstraint('eventid', 'tickettypeid')
    )
    op.create_table('ticket',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Integer(), nullable=True),
    sa.Column('eventid', sa.Integer(), nullable=True),
    sa.Column('qrcode', sa.Integer(), nullable=True),
    sa.Column('seatnumber', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['eventid'], ['event.id'], ),
    sa.ForeignKeyConstraint(['type'], ['tickettype.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ticket_id'), 'ticket', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_ticket_id'), table_name='ticket')
    op.drop_table('ticket')
    op.drop_table('eventticketcapacity')
    op.drop_index(op.f('ix_venuerestriction_id'), table_name='venuerestriction')
    op.drop_table('venuerestriction')
    op.drop_index(op.f('ix_venuecontact_id'), table_name='venuecontact')
    op.drop_table('venuecontact')
    op.drop_index(op.f('ix_tickettype_id'), table_name='tickettype')
    op.drop_table('tickettype')
    op.drop_index(op.f('ix_venue_id'), table_name='venue')
    op.drop_table('venue')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_event_id'), table_name='event')
    op.drop_table('event')
    op.drop_index(op.f('ix_contactperson_id'), table_name='contactperson')
    op.drop_table('contactperson')
    # ### end Alembic commands ###
